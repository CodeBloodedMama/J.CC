name: CI

on:
  push:
    branches: [main, master, test]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Tests (optional)
        run: |
          if npm run | grep -q " test"; then
            npm run test
          else
            echo "no tests"
          fi

      - name: Build
        run: npm run build

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error
          retention-days: 7

      - name: Coverage (console + files)
        if: always()
        run: |
          if npm run | grep -q " coverage"; then
            npm run coverage
            echo "== ls reports/coverage =="
            ls -la reports/coverage || true
            echo "== cat coverage-summary =="
            cat reports/coverage/coverage-summary.json || true
          else
            echo "no coverage"
          fi

      - name: Coverage â†’ Job Summary
        if: always()
        shell: bash
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const p = 'reports/coverage/coverage-summary.json';
          const s = fs.readFileSync(p, 'utf8');
          const j = JSON.parse(s).total;
          const md = [
            '## Test Coverage',
            '',
            '| Metric | % | Covered / Total |',
            '|--|--:|--:|',
            `| Statements | ${j.statements.pct}% | ${j.statements.covered} / ${j.statements.total} |`,
            `| Branches   | ${j.branches.pct}%   | ${j.branches.covered}   / ${j.branches.total}   |`,
            `| Functions  | ${j.functions.pct}%  | ${j.functions.covered}  / ${j.functions.total}  |`,
            `| Lines      | ${j.lines.pct}%      | ${j.lines.covered}      / ${j.lines.total}      |`,
            ''
          ].join('\n');
          fs.writeFileSync(process.env.GITHUB_STEP_SUMMARY, md);
          NODE
